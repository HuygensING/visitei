<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="tei" default="jar">

  <!-- Load properties from file, if it exists -->
  <property file="build.properties" />

  <property name="project.name" value="tei"/>
  <property name="project.version" value="0.1"/>
  <property name="project.name-ver" value="${project.name}-${project.version}"/>

  <property name="build.dir" location="build" />
  <property name="dist.dir" location="dist" />
	<property name="javadoc.dir" location="${dist.dir}/javadoc" />

  <property name="main.src.dir" location="src/main/java" />
  <property name="main.bin.dir" location="${build.dir}/main/classes" />

  <property name="test.src.dir" location="src/test/java" />
  <property name="test.bin.dir" location="${build.dir}/test/classes" />
  <property name="test.data.dir" location="${build.dir}/test/data" />
  <property name="test.reports.dir" location="${build.dir}/test/reports" />

	<property name="lib.dir" location="lib" />

  <property name="target.name" value="${project.name-ver}.jar" />
  <property name="target.jar" location="${dist.dir}/${target.name}" />

  <tstamp>
    <format property="timestamp.isoformat" pattern="yyyy-mm-dd'T'HH:mm:ss" locale="en" />
  </tstamp>
  <tstamp>
    <format property="build.date" pattern="yyyyMMddHHmmss" timezone="Europe/Amsterdam"/>
  </tstamp>

  <target name="init">
    <mkdir dir="${main.bin.dir}" />
    <mkdir dir="${test.bin.dir}" />
    <mkdir dir="${test.data.dir}" />
    <mkdir dir="${test.reports.dir}" />
    <mkdir dir="${dist.dir}" />
  	<mkdir dir="${javadoc.dir}" />
  </target>

  <target name="clean" description="Deletes all files generated by the build.">
    <delete dir="$(build.dir)" />
    <delete dir="${dist.dir}" />
  </target>

  <target name="resolve" depends="init">
    <ivy:retrieve />
  </target>

  <target name="ivy-init" depends="init">
    <property name="ivy.lib.dir" location="build/ivy/lib"/>
  </target>
  <target name="ivy-resolve" depends="ivy-init">
    <ivy:resolve/>
  </target>
  <target name="ivy-retrieve" depends="ivy-resolve">
    <ivy:retrieve pattern="${ivy.lib.dir}/[conf]/[artifact]-[revision].[ext]" sync="true" />
  </target>
  <target name="ivy-report" depends="ivy-resolve">
     <ivy:report todir="${build.dir}/ivy/report" />
  </target>

  <target name="classpaths" depends="ivy-retrieve">
    <path id="main.compile.classpath">
      <fileset dir="${ivy.lib.dir}/main" includes="*.jar" />
    </path>
    <path id="test.compile.classpath">
      <fileset dir="${ivy.lib.dir}/test" includes="*.jar" />
      <pathelement location="${main.bin.dir}" />
    </path>
    <path id="test.classpath">
      <path refid="test.compile.classpath" />
      <pathelement location="${test.bin.dir}" />
    </path>
  </target>

  <target name="main-compile" depends="classpaths">
    <javac srcdir="${main.src.dir}" destdir="${main.bin.dir}">
      <classpath refid="main.compile.classpath"/>
    </javac>    
  </target>

  <target name="test-compile" depends="main-compile">
    <javac srcdir="${test.src.dir}" destdir="${test.bin.dir}">
      <classpath refid="test.compile.classpath"/>
    </javac>
  </target>
	
  <target name="unit-tests" depends="test-compile">
  	<!-- Run tests in their own JVM -->
    <junit fork="true" forkmode="once" printsummary="false"
           errorProperty="test.failed" failureProperty="test.failed">
      <classpath refid="test.classpath"/>
      <formatter type="brief" usefile="false"/>
      <formatter type="xml"/>
      <batchtest todir="${test.data.dir}">
        <fileset dir="${test.bin.dir}">
          <include name="**/*Test.class"/>
        </fileset>
      </batchtest>
    </junit>
    <junitreport todir="${test.data.dir}">
      <fileset dir="${test.data.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports.dir}"/>
    </junitreport>
    <fail if="test-failed">
      Test failed. Check ${test.reports.dir}.
    </fail>
  </target>

  <target name="javadocs" depends="main-compile">
    <javadoc access="private"
        destdir="${javadoc.dir}"
        packagenames="nl.knaw.huygens.*"
        sourcepath="${main.src.dir}"
        windowtitle="${ant.project.name}"
        failonerror="true">
      <classpath refid="main.compile.classpath"/>
    </javadoc>
  </target>

  <target name="jar" depends="clean,unit-tests" >
    <property name="manifest.mf" location="${build.dir}/manifest.mf" />
    <manifest file="${manifest.mf}" >
      <attribute name="Built-By" value="${user.name}" />
      <attribute name="Sealed" value="true" />
      <attribute name="Built-On" value="${timestamp.isoformat}" />
    </manifest>
    <jar destfile="${target.jar}" duplicate="preserve" manifest="${manifest.mf}">
      <fileset dir="${main.bin.dir}"/>
    </jar>
  </target>


  <target name="publish-local" depends="jar" description="--> publish this project in the local ivy repository">
    <ivy:publish artifactspattern="${dist.dir}/[artifact]-[revision].[ext]" resolver="local" overwrite="true" pubdate="${build.date}" pubrevision="${project.version}" status="integration" forcedeliver="true"/>
    <echo message="project ${ant.project.name} published locally with version ${project.version}"/>
  </target> 

</project>
